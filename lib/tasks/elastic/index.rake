require 'benchmark'
require 'progress'
require 'colored'

namespace :elastic do
  namespace :index do
    desc 'index measurements'
    task :measurements => :environment do
      time = Benchmark.realtime do
        ActiveRecord::Base.logger = Logger.new(STDOUT)

        [46025, 46033, 46041, 46057, 46061, 46092, 46096, 56733, 56738, 59857, 59874, 59889, 59893, 60051, 60054, 60059,
         60219, 60788, 61594, 62024, 62028, 62030, 62034, 62038, 62299, 62303, 62307, 62311, 62315, 62319, 62327, 62331,
         62335, 62339, 62343, 62347, 62351, 62355, 62359, 62363, 62367, 62371, 62375, 62379, 62383, 62399, 62402, 62406,
         62410, 62414, 62418, 62422, 62426, 62430, 62434, 62438, 62442, 62446, 62450, 62454, 62458, 62470, 62474, 62478,
         62482, 62486, 62490, 62494, 62502, 62506, 62510, 62514, 62518, 62561, 62565, 62569, 62573, 62581, 62585, 62636,
         64467, 64476, 64500, 64504, 64508, 64512, 64969, 64973, 64981, 64991, 65056, 65116, 65140, 65181, 65395, 65411,
         65415, 65419, 65511, 65516, 65520, 65524, 65528, 65532, 65536, 65540, 65563, 65595, 65605, 65627, 65740, 65744,
         65748, 65760, 65772, 65780, 65784, 65810, 65912, 65921, 65933, 65961, 65973, 66068, 66076, 66088, 66104, 66116,
         66120, 66132, 66136, 66144, 66267, 66299, 66301, 66307, 66309, 66313, 66337, 66341, 66345, 66359, 66368, 66383,
         66427, 66431, 66435, 66439, 66448, 66452, 66456, 66509, 66529, 66533, 66572, 66579, 66589, 66593, 66597, 66610,
         66614, 66680, 66685, 67325, 67330, 67337, 67341, 67345, 67726, 67730, 67734, 67738, 67740, 67741, 67744, 67747,
         67750, 67753, 67759, 67910, 67913, 67916, 67988, 67991, 67994, 67997, 68019, 68067, 68070, 68073, 68182, 68234,
         68237, 68240, 68243, 68571, 68574, 68577, 68580].reverse.with_progress do |stream_id|
          stream = Stream.find(stream_id)
          index_name = "#{stream.measurement_type.parameterize.underscore}_#{stream.sensor_name.parameterize.underscore}"
          Elastic::Measurement.create_index!(index: index_name)
          Elastic::Measurement.import(index: index_name, query: -> { where(stream_id: stream_id) })
        end
      end

      puts "#{time}".red
    end
  end
end
